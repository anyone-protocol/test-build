name: Test Build & Publish

on:
  push:
    branches: main
    tags:
      - v*
env:
  IMAGE_NAME: test-build

jobs:
  push:
    # runs-on: ubuntu-latest
    # runs-on: self-hosted
    runs-on: anyone-arc-runner-set
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build image
        run: |
          docker build . \
            --file Dockerfile \
            --tag $IMAGE_NAME \
            --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
          docker login ghcr.io -u $ --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=stage
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$GITHUB_SHA
          docker push $IMAGE_ID:$GITHUB_SHA
      - name: Deploy new version
        env:
          NOMAD_CACERT: operations/admin-ui-ca.crt
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN_OPERATOR_CHECKS_DEPLOY }}
          NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
        run: |
          curl -L https://releases.hashicorp.com/nomad/1.10.5/nomad_1.10.5_linux_amd64.zip -o nomad.zip
          unzip nomad.zip
          sed -i "s/\[\[ .commit_sha \]\]/${GITHUB_SHA}/g" test-build-hello-world.hcl
          ./nomad job run test-build-hello-world.hcl
